version: '3.8'

x-common-variables: &common-variables
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: '${TIMEZONE}'

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: always
    depends_on:
      - fluent-bit
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '80:80/tcp'
      - '443:443/tcp'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'traefik:/etc/traefik/'
      - '/etc/keys/ssl:/etc/traefik/certs'
      - './provision/traefik/config/dynamic_config.yml:/etc/traefik/config/dynamic_config.yml'
    environment:
      <<: *common-variables
    command:
      - '--global.checknewversion=true'
      - '--global.sendanonymoususage=false'
      - '--api.dashboard=true'

      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.file.directory=/etc/traefik/config'
      - '--providers.file.watch=true'
      - '--entrypoints.dnstcp.address=:53/tcp'
      - '--entrypoints.dnsudp.address=:53/udp'

      - '--entrypoints.http.address=:80/tcp'

      - '--entrypoints.http.http.redirections.entryPoint.to=https'
      - '--entrypoints.http.http.redirections.entryPoint.scheme=https'

      - '--entrypoints.https.address=:443/tcp'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.entrypoints=https'
      - 'traefik.http.routers.traefik.tls=true'

      - 'traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)'
      - 'traefik.http.routers.traefik.service=api@internal'
    logging:
      driver: fluentd
      options:
        fluentd-address: ${MACHINE_IP:-localhost}:24224
        fluentd-async-connect: 'true'
        tag: traefik.logs

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    depends_on:
      - traefik
      - fluent-bit
    environment:
      <<: *common-variables
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
      ServerIP: '${PIHOLE_IP}'
      VIRTUAL_HOST: pihole.${DOMAIN}
    # Volumes store your data between container upgrades
    volumes:
      - '${APPDATA_PATH}/pihole/etc/pihole/:/etc/pihole/'
      - '${APPDATA_PATH}/pihole/etc/dnsmasq.d/:/etc/dnsmasq.d/'
      - './provision/pihole/etc-pihole/custom.list:/etc/pihole/custom.list'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - 1.1.1.1
    ulimits:
      nofile:
        soft: 512
        hard: 1024
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pihole.entrypoints=https'
      - 'traefik.http.routers.pihole.tls=true'
      - 'traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)'
      - 'traefik.http.routers.pihole.middlewares=pihole-prefix'
      - 'traefik.http.middlewares.pihole-prefix.addPrefix.prefix=/admin'
      - 'traefik.http.services.pihole.loadbalancer.server.port=80'
      - 'traefik.http.services.pihole.loadbalancer.passHostHeader=true'

      - 'traefik.tcp.routers.dnstcp.entrypoints=dnstcp'
      - 'traefik.tcp.routers.dnstcp.rule=HostSNI(`*`)'
      - 'traefik.tcp.services.pihole.loadbalancer.server.port=53'

      - 'traefik.udp.routers.dnsudp.entrypoints=dnsudp'
      - 'traefik.udp.services.pihole.loadbalancer.server.port=53'
    logging:
      driver: fluentd
      options:
        fluentd-address: ${MACHINE_IP:-localhost}:24224
        fluentd-async-connect: 'true'
        tag: pihole.logs

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    volumes:
      - ${APPDATA_PATH}/jellyfin/config:/config
      - ${APPDATA_PATH}/jellyfin/cache:/cache
      - ${MEDIA_PATH}/Films:/movies
      - ${MEDIA_PATH}/Series:/episodes
      - ${MEDIA_PATH}/Anime:/animes
      - ${MEDIA_PATH}/Cartoons:/cartoons
      - ${MEDIA_PATH}/Documentary:/documentary
      - ${MEDIA_PATH}/Music:/music
    network_mode: 'host'
    depends_on:
      - traefik
      - pihole
      - fluent-bit
    ports:
      # for some reason jellyfin app doesn't work with traefik proxy, open port directly for local mobile clients
      - '8096:8096'
      - '7359:7359/udp'
    environment:
      <<: *common-variables
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'

      - 'traefik.http.routers.jellyfin.entrypoints=https'
      - 'traefik.http.routers.jellyfin.tls=true'

      - 'traefik.http.routers.jellyfin.service=jellyfin'

      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)'
      - 'traefik.http.services.jellyfin.loadbalancer.server.port=8096'
    logging:
      driver: fluentd
      options:
        fluentd-address: ${MACHINE_IP:-localhost}:24224
        fluentd-async-connect: 'true'
        tag: jellyfin.logs

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana_server
    depends_on:
      - traefik
      - fluent-bit
    environment:
      <<: *common-variables
      GF_SECURITY_ADMIN_USER: '${GRAFANA_SECURITY_ADMIN_USER}'
      GF_SECURITY_ADMIN_PASSWORD: '${GRAFANA_SECURITY_ADMIN_PASSWORD}'
      GF_USERS_ALLOW_SIGN_UP: '${GRAFANA_USERS_ALLOW_SIGN_UP}'
    volumes:
      - 'grafana:/var/lib/grafana/'
      - './provision/grafana/configs/datasources:/etc/grafana/provisioning/datasources'
      - './provision/grafana/configs/dashboards:/etc/grafana/provisioning/dashboards'
    restart: unless-stopped
    ports:
      - '3000:3000'
    labels:
      - 'traefik.enable=true'

      - 'traefik.http.routers.grafana.entrypoints=https'
      - 'traefik.http.routers.grafana.tls=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)'

      - 'traefik.http.routers.grafana.service=grafana'

      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    logging:
      driver: fluentd
      options:
        fluentd-address: ${MACHINE_IP:-localhost}:24224
        fluentd-async-connect: 'true'
        tag: grafana.logs

  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - ./provision/loki/:/etc/loki/
    command: -config.file=/etc/loki/loki.yml
    ports:
      - '3100:3100'

  fluent-bit:
    image: fluent/fluent-bit
    container_name: fluent-bit
    depends_on:
      - loki
    ports:
      - '24224:24224'
      - '24224:24224/udp'
      - '2020:2020'
    configs:
      - source: fluent-bit
        target: /fluent-bit/etc/fluent-bit.conf
      - source: fluent-bit-parsers
        target: /fluent-bit/etc/parsers.conf

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    depends_on:
      - traefik
      - fluent-bit
    environment:
      <<: *common-variables
      WEBUI_PORT: 8081
    volumes:
      - ${APPDATA_PATH}/qbittorrent/config:/config
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - '6881:6881'
      - '6881:6881/udp'
      - '8081:8081'
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'

      - 'traefik.http.routers.qbittorrent.entrypoints=https'
      - 'traefik.http.routers.qbittorrent.tls=true'
      - 'traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.${DOMAIN}`)'

      - 'traefik.http.routers.qbittorrent.service=qbittorrent'

      - 'traefik.http.services.qbittorrent.loadbalancer.server.port=8081'
    logging:
      driver: fluentd
      options:
        fluentd-address: ${MACHINE_IP:-localhost}:24224
        fluentd-async-connect: 'true'
        tag: qbittorrent.logs

volumes:
  traefik:
    name: traefik
  grafana:
    name: grafana

configs:
  fluent-bit:
    name: ${FLUENT_BIT_CONFIG_NAME:-fluent-bit-conf}
    file: ./provision/fluent-bit/fluent-bit.conf
  fluent-bit-parsers:
    name: fluent-bit-parsers
    file: ./provision/fluent-bit/parsers.conf
