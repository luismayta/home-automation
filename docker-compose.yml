version: '3.8'

x-common-variables: &common-variables
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: '${TIMEZONE}'

services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      <<: *common-variables
      WEBUI_PORT: 8081
    volumes:
      - ${APPDATA_PATH}/qbittorrent/config:/config
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - '6881:6881'
      - '6881:6881/udp'
      - '8081:8081'
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
      - '80:80/tcp'
    environment:
      <<: *common-variables
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
      ServerIP: '${PIHOLE_IP}'
      VIRTUAL_HOST: 'pi.${DOMAIN}'
    # Volumes store your data between container upgrades
    volumes:
      - '${APPDATA_PATH}/pihole/etc/pihole/:/etc/pihole/'
      - '${APPDATA_PATH}/pihole/etc/dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - 1.1.1.1
    ulimits:
      nofile:
        soft: 512
        hard: 1024
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pihole.entrypoints=https'
      - 'traefik.http.routers.pihole.tls=true'
      - 'traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)'
      - 'traefik.http.routers.pihole.middlewares=pihole-prefix'
      - 'traefik.http.middlewares.pihole-prefix.addPrefix.prefix=/admin'
      - 'traefik.http.services.pihole.loadbalancer.server.port=80'
      - 'traefik.http.services.pihole.loadbalancer.passHostHeader=true'

      - 'traefik.tcp.routers.dnstcp.entrypoints=dnstcp'
      - 'traefik.tcp.routers.dnstcp.rule=HostSNI(`*`)'
      - 'traefik.tcp.services.pihole.loadbalancer.server.port=53'

      - 'traefik.udp.routers.dnsudp.entrypoints=dnsudp'
      - 'traefik.udp.services.pihole.loadbalancer.server.port=53'

  restic:
    image: ajoergensen/rest-server:latest
    container_name: restic-server
    volumes:
      - ${RESTIC_DATA_PATH}/:/data
    ports:
      - '${RESTIC_PORT:-8000}:8000'
    environment:
      <<: *common-variables
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - ${APPDATA_PATH}/jellyfin/config:/config
      - ${APPDATA_PATH}/jellyfin/cache:/cache
      - ${MEDIA_PATH}/Films:/movies
      - ${MEDIA_PATH}/Series:/episodes
      - ${MEDIA_PATH}/Anime:/animes
      - ${MEDIA_PATH}/Cartoons:/cartoons
      - ${MEDIA_PATH}/Documentary:/documentary
      - ${MEDIA_PATH}/Music:/music
    ports:
      - '8096:8096'
      - '7359:7359/udp'
    environment:
      <<: *common-variables
    restart: always

networks:
  proxy: {}
